const bcrypt = require('bcryptjs');
const { pool } = require('../config/database');

async function createAdmin() {
  const client = await pool.connect();
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
    const existingAdmin = await client.query(
      "SELECT id FROM users WHERE role = 'admin' LIMIT 1"
    );

    if (existingAdmin.rows.length > 0) {
      console.log('‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
      return;
    }

    // –î–∞–Ω–Ω—ã–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    const adminData = {
      email: process.env.ADMIN_EMAIL || 'admin@dropshipping.com',
      password: process.env.ADMIN_PASSWORD || 'Admin123!',
      firstName: process.env.ADMIN_FIRST_NAME || '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
      lastName: process.env.ADMIN_LAST_NAME || '–°–∏—Å—Ç–µ–º—ã',
      phone: process.env.ADMIN_PHONE || '+7 (999) 123-45-67'
    };

    console.log('üîê –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...');
    console.log(`üìß Email: ${adminData.email}`);
    console.log(`üë§ –ò–º—è: ${adminData.firstName} ${adminData.lastName}`);
    console.log(`üì± –¢–µ–ª–µ—Ñ–æ–Ω: ${adminData.phone}`);

    // –•–µ—à–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å
    const saltRounds = 12;
    const passwordHash = await bcrypt.hash(adminData.password, saltRounds);

    // –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    const userResult = await client.query(
      `INSERT INTO users (email, password_hash, first_name, last_name, phone, role, is_active, email_verified, phone_verified)
       VALUES ($1, $2, $3, $4, $5, 'admin', true, true, true)
       RETURNING id, email, first_name, last_name, role, created_at`,
      [adminData.email, passwordHash, adminData.firstName, adminData.lastName, adminData.phone]
    );

    const admin = userResult.rows[0];

    console.log('‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!');
    console.log(`üÜî ID: ${admin.id}`);
    console.log(`üìß Email: ${admin.email}`);
    console.log(`üîë –ü–∞—Ä–æ–ª—å: ${adminData.password}`);
    console.log(`üìÖ –°–æ–∑–¥–∞–Ω: ${admin.created_at}`);
    console.log('');
    console.log('‚ö†Ô∏è  –í–ê–ñ–ù–û: –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –º–µ—Å—Ç–µ!');
    console.log('‚ö†Ô∏è  –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–¥–∞!');

  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:', err);
    throw err;
  } finally {
    client.release();
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
if (require.main === module) {
  createAdmin()
    .then(() => {
      console.log('üéâ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ');
      process.exit(0);
    })
    .catch((err) => {
      console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', err);
      process.exit(1);
    });
}

module.exports = { createAdmin };





