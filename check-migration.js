const { Pool } = require('pg');
require('dotenv').config();

async function checkMigration() {
  const pool = new Pool({
    host: process.env.DB_HOST || 'localhost',
    port: process.env.DB_PORT || 5432,
    database: process.env.DB_NAME || 'dropshipping_db',
    user: process.env.DB_USER || 'dropshipping',
    password: process.env.DB_PASSWORD || 'KeyOfWorld2025',
  });

  const client = await pool.connect();
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∫–æ–ª–æ–Ω–∫–∞ order_type
    const result = await client.query(`
      SELECT column_name, data_type, column_default 
      FROM information_schema.columns 
      WHERE table_name = 'orders' AND column_name = 'order_type'
    `);

    if (result.rows.length > 0) {
      console.log('‚úÖ –ö–æ–ª–æ–Ω–∫–∞ order_type —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!');
      console.log('üìä –î–µ—Ç–∞–ª–∏ –∫–æ–ª–æ–Ω–∫–∏:', result.rows[0]);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π —Å —Ä–∞–∑–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ –∑–∞–∫–∞–∑–æ–≤
      const countResult = await client.query(`
        SELECT order_type, COUNT(*) as count 
        FROM orders 
        GROUP BY order_type
      `);
      
      console.log('üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∏–ø–∞–º –∑–∞–∫–∞–∑–æ–≤:');
      countResult.rows.forEach(row => {
        console.log(`   ${row.order_type}: ${row.count} –∑–∞–∫–∞–∑–æ–≤`);
      });
      
    } else {
      console.log('‚ùå –ö–æ–ª–æ–Ω–∫–∞ order_type –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!');
      console.log('üí° –í—ã–ø–æ–ª–Ω–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏—é: node scripts/run-migrations.js');
    }

  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –º–∏–≥—Ä–∞—Ü–∏–∏:', err.message);
  } finally {
    client.release();
    await pool.end();
  }
}

checkMigration();

